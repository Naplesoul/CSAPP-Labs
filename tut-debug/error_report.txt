/*
 * BUG#0
 * description: 
     miss semicolon
 * location: 
 *   int a = 10  (line 18)
 * evidence: 
 *   test.c:19: error: two or more data types in declaration specifiers
 */

BUG#1
description: 
  miss semicolon
location: 
  enum { buf_size = buf_nrec * 100 }	(line 52)
evidence: 
  gen_sort.c:54:9: error: expected ‘;’, identifier or ‘(’ before ‘struct’


BUG#2
description:
  miss semicolon
location:
  } record_t	(line 58)
evidence:
  gen_sort.c:58:11: error: expected ‘;’ before ‘static’


BUG#3
description:
  use undefined typename
location:
  gen_rec(record *rec)	(line 114)
evidence:
  gen_sort.c:114:9: error: unknown type name ‘record’; did you mean ‘record_t’?


BUG#4
description:
  didn't include necessary headers
location:
  sprintf(rec->recno, "%10d", recno++);	(line 122)
evidence:
  gen_sort.c: In function ‘gen_rec’:
  gen_sort.c:122:2: warning: implicit declaration of function ‘sprintf’ [-Wimplicit-function-declaration]


BUG#5
description:
  miss '{'
location:
  if (!file)	(line 188)
evidence:
  gen_sort.c:194:2: error: expected identifier or ‘(’ before ‘while’


BUG#6
description:
  add i instead of j in a for loop
location:
  for (j = 0; j < 10; i++ )
  should be "for (j = 0; j < 10; j++ )"
evidence:
  gen_sort running ... with [10, out.txt]
  Segmentation fault



BUG#7
description:
  wrong argument when opening file
location:
  FILE *file = fopen(fn, "r" )	(line 187)
  should be "FILE *file = fopen(fn, "wb")	(line 187)
evidence:
  error: unable to open file xxx



BUG#8
description:
  rec_len is wrong
location:
  enum { rec_len = key_len + pad_len };	(line 49)
  should be "enum { rec_len = key_len + recno_len + pad_len };"
evidence:
  the last line of output file didn't completely shows



BUG#9
description:
  write 1 more line to the buf than it can hold
location:
  for (cnt = 0; (cnt <= buf_nrec)
  should be "for (cnt = 0; (cnt < buf_nrec)"
evidence:
  Segmentation fault



BUG#10
description:
  didn't change cur_rec after the previous buf is written
location:
  cur_rec += cnt;	(line 203)
  should be moved into the while loop
evidence:
  only writes 16 lines of records when #record is greater than 16
